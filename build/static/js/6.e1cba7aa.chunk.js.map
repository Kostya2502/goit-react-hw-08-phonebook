{"version":3,"sources":["components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css","components/App.module.css","redux/selectors.js","components/contactForm/ContactForm.js","redux/operations.js","components/contactList/ContactList.js","components/filter/Filter.js","components/loader/LoaderSpinner.js","pages/PhonebookPage.js"],"names":["module","exports","allContacts","state","contacts","items","contactsFilter","filter","isLoading","loading","filterContactsByName","createSelector","normalizedFilter","toLocaleLowerCase","name","includes","useStyles","makeStyles","theme","button","margin","spacing","ContactForm","useForm","register","handleSubmit","errors","useState","setName","number","setNumber","dispatch","useDispatch","myNamesInItem","useSelector","classes","reset","handleChange","e","preventDefault","currentTarget","value","onSubmit","contactName","contactNumber","map","contact","alert","getState","idToken","auth","addContactRequest","axios","post","process","then","data","addContactSuccess","id","catch","error","addContactError","className","style","form","label","type","placeholder","onChange","input","ref","required","warn","pattern","Button","variant","color","size","startIcon","ContactList","useEffect","a","getContactsRequest","get","Object","keys","key","getContactsSuccess","getContactsError","ondeleteContact","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","TransitionGroup","component","marginLeft","CSSTransition","timeout","classNames","width","item","onClick","connect","OnFilterContacts","contactsActions","LoaderSpinner","height","Component","PhonebookPage","loader","in","appear","unmountOnExit","textAlign","length","class"],"mappings":"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","file":"static/js/6.e1cba7aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Kinz\",\"label\":\"ContactForm_label__2Fdr7\",\"input\":\"ContactForm_input__1Ahv4\",\"button\":\"ContactForm_button__sioAz\",\"warn\":\"ContactForm_warn__1YVhA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2R1V7\",\"button\":\"ContactList_button__20C9Q\",\"enter\":\"ContactList_enter__vJt0x\",\"enterActive\":\"ContactList_enterActive__3Hn21\",\"exit\":\"ContactList_exit__1S6zz\",\"exitActive\":\"ContactList_exitActive__2wNcC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Filter_enter__22M92\",\"enterActive\":\"Filter_enterActive__3-LQS\",\"exit\":\"Filter_exit__1dVP_\",\"exitActive\":\"Filter_exitActive__LEmnx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"App_appear__1v9PW\",\"appearActive\":\"App_appearActive__1jGBG\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst allContacts = state => state.contacts.items;\r\n\r\nconst contactsFilter = state => state.contacts.filter;\r\n\r\nconst isLoading = state => state.contacts.loading;\r\n\r\nconst filterContactsByName = createSelector(\r\n    allContacts, contactsFilter,\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n        return contacts.filter(({ name }) =>\r\n            name.toLocaleLowerCase().includes(normalizedFilter),\r\n        );\r\n    },\r\n);\r\n\r\nexport { allContacts, contactsFilter, isLoading, filterContactsByName };","import style from \"./ContactForm.module.css\";\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { allContacts } from \"../../redux/selectors\";\r\nimport { addContact } from \"../../redux/operations\";\r\nimport { Button } from \"@material-ui/core\";\r\n// import Icon from '@material-ui/core/Icon';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function ContactForm() {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const dispatch = useDispatch();\r\n    const myNamesInItem = useSelector(allContacts);\r\n\r\n    const classes = useStyles();\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        const getContacts = myNamesInItem.map(contact =>\r\n            contact.name.toLocaleLowerCase(),\r\n        );\r\n\r\n        const isGetContactAlready = getContacts.includes(name.toLocaleLowerCase());\r\n\r\n        if (isGetContactAlready) {\r\n            reset();\r\n            return alert(`${name} is already in contacts!`);\r\n        }\r\n        dispatch(addContact(name, number));\r\n        reset();\r\n    };\r\n\r\n    const handleChange = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.currentTarget;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className={style.form}>\r\n            <label className={style.label}>\r\n                Name:\r\n          <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"enter name\"\r\n                    onChange={handleChange}\r\n                    className={style.input}\r\n                    ref={register({ required: true })}\r\n                />\r\n            </label>\r\n\r\n            {errors.name && errors.name.type === 'required' && (\r\n                <p className={style.warn}>This is required </p>\r\n            )}\r\n\r\n            <label className={style.label}>\r\n                Number:\r\n          <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    placeholder=\"enter number\"\r\n                    ref={register({\r\n                        required: true,\r\n                        pattern: /^[0-9]+$/gm,\r\n                    })}\r\n                    onChange={handleChange}\r\n                    className={style.input}\r\n                />\r\n            </label>\r\n\r\n            {errors.number && errors.number.type === 'required' && (\r\n                <p className={style.warn}>This is required </p>\r\n            )}\r\n\r\n            {errors.number && errors.number.type === 'pattern' && (\r\n                <p className={style.warn}>There must be numbers</p>\r\n            )}\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                size=\"large\"\r\n                className={classes.button}\r\n                startIcon={<SaveIcon />}\r\n                type=\"submit\"\r\n            >\r\n                Save\r\n      </Button>\r\n\r\n        </form>\r\n    );\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n    addContactRequest, addContactSuccess, addContactError,\r\n    getContactsRequest, getContactsSuccess, getContactsError,\r\n    deleteContactRequest, deleteContactSuccess, deleteContactError\r\n} from './actions'\r\n\r\n\r\nexport const addContact = (contactName, contactNumber) => (dispatch, getState) => {\r\n    const idToken = getState().auth.idToken;\r\n    const contact = {\r\n        name: contactName,\r\n        number: contactNumber,\r\n    };\r\n    dispatch(addContactRequest());\r\n    axios.post(`${process.env.REACT_APP_BASE_URL}/contacts.json?auth=${idToken}`, contact)\r\n        .then(({ data }) => dispatch(addContactSuccess({ ...contact, id: data.name })))\r\n        .catch((error) => dispatch(addContactError(error)))\r\n}\r\n\r\nexport const deleteContact = id => async (dispatch, getState) => {\r\n    // const idToken = getState().auth.idToken;\r\n    dispatch(deleteContactRequest());\r\n    try {\r\n        await axios.delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`);\r\n        dispatch(deleteContactSuccess(id));\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error));\r\n    }\r\n};\r\n\r\nexport const getContacts = () => async (dispatch, getState) => {\r\n    // const idToken = getState().auth.idToken;\r\n    dispatch(getContactsRequest());\r\n    try {\r\n        const { data } = await axios.get(`${process.env.REACT_APP_BASE_URL}/contacts.json`);\r\n        const contacts = Object.keys(data).map((key) => ({\r\n            ...data[key],\r\n            id: key,\r\n        }));\r\n        dispatch(getContactsSuccess(contacts));\r\n    } catch (error) {\r\n        dispatch(getContactsError(error));\r\n    }\r\n};\r\n\r\n// ============================================================\r\n\r\n// import axios from 'axios';\r\n// import {\r\n//     addContactRequest, addContactSuccess, addContactError,\r\n//     getContactsRequest, getContactsSuccess, getContactsError,\r\n//     deleteContactRequest, deleteContactSuccess, deleteContactError\r\n// } from './actions'\r\n\r\n\r\n// export const addContact = (contactName, contactNumber) => dispatch => {\r\n//     const contact = {\r\n//         name: contactName,\r\n//         number: contactNumber,\r\n//     };\r\n//     dispatch(addContactRequest());\r\n//     axios.post(`${process.env.REACT_APP_BASE_URL}/contacts.json`, contact)\r\n//         .then(({ data }) => dispatch(addContactSuccess({ ...contact, id: data.name })))\r\n//         .catch((error) => dispatch(addContactError(error)))\r\n// }\r\n\r\n// // export const deleteContact = Id => dispatch => {\r\n// //     dispatch(deleteContactRequest());\r\n// //     axios.delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`)\r\n// //         .then(() => dispatch(deleteContactSuccess(Id)))\r\n// //         .catch(error => dispatch(deleteContactError(error)));\r\n// // };\r\n\r\n// export const deleteContact = id => async dispatch => {\r\n//     dispatch(deleteContactRequest());\r\n//     try {\r\n//         await axios.delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`);\r\n//         dispatch(deleteContactSuccess(id));\r\n//     } catch (error) {\r\n//         dispatch(deleteContactError(error));\r\n//     }\r\n// };\r\n\r\n// export const getContacts = () => async dispatch => {\r\n//     dispatch(getContactsRequest());\r\n//     try {\r\n//         const { data } = await axios.get(`${process.env.REACT_APP_BASE_URL}/contacts.json`);\r\n//         const contacts = Object.keys(data).map((key) => ({\r\n//             ...data[key],\r\n//             id: key,\r\n//         }));\r\n//         dispatch(getContactsSuccess(contacts));\r\n//     } catch (error) {\r\n//         dispatch(getContactsError(error));\r\n//     }\r\n// };\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport style from './ContactList.module.css';\r\nimport './ContactList.css';\r\nimport { deleteContact, getContacts } from '../../redux/operations';\r\nimport { filterContactsByName } from '../../redux/selectors';\r\n\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n// import Icon from '@material-ui/core/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst ContactList = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(filterContactsByName);\r\n\r\n    useEffect(() => {\r\n        dispatch(getContacts());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const ondeleteContact = id => dispatch(deleteContact(id));\r\n\r\n    return (\r\n        <TransitionGroup component='ul' style={{ marginLeft: '0px' }} >\r\n            {contacts.map(({ id, name, number }) => (\r\n                < CSSTransition key={id} timeout={400} classNames={style} >\r\n                    <li style={{ margin: '10px auto', width: '400px' }} key={id} className={style.item}>\r\n                        <p >\r\n                            {name}: {number}\r\n                        </p>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            startIcon={<DeleteIcon />}\r\n                            type=\"button\"\r\n                            onClick={() => ondeleteContact(id)}\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                        {/* <button\r\n                            type=\"button\"\r\n                            onClick={() => ondeleteContact(id)}\r\n                            className={style.button}\r\n                        >\r\n                            Delete\r\n                        </button> */}\r\n                    </li>\r\n                </CSSTransition>\r\n            ))\r\n            }\r\n        </TransitionGroup >\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n","import style from './Filter.module.css';\r\nimport { connect } from \"react-redux\";\r\nimport * as contactsActions from '../../redux/actions';\r\nimport { contactsFilter } from '../../redux/selectors';\r\n\r\nconst Filter = ({ value, OnFilterContacts }) => {\r\n    return (\r\n        <div style={{ margin: '10px auto', width: '400px' }} classNames={style}><label>\r\n            Find contacts by name:\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={OnFilterContacts}\r\n                placeholder='Search contact'\r\n            />\r\n        </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: contactsFilter(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    OnFilterContacts: e =>\r\n        dispatch(contactsActions.changeFilter(e.currentTarget.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default class LoaderSpinner extends Component {\r\n    render() {\r\n        return (\r\n            <Loader\r\n                type=\"TailSpin\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n                timeout={3000}\r\n                style={{ margin: \"auto\" }}\r\n            />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ContactForm from '../components/contactForm/ContactForm';\r\nimport ContactList from '../components/contactList/ContactList';\r\nimport Filter from '../components/filter/Filter';\r\nimport LoaderSpinner from '../components/loader/LoaderSpinner';\r\nimport { allContacts, contactsFilter, isLoading } from '../redux/selectors';\r\nimport style from '../components/App.module.css';\r\n\r\nconst PhonebookPage = () => {\r\n    const value = useSelector(contactsFilter);\r\n    const contacts = useSelector(allContacts);\r\n    const loader = useSelector(isLoading);\r\n\r\n    return (\r\n        <>\r\n            <CSSTransition in={true} classNames={style} appear={true} timeout={1000} unmountOnExit>\r\n                <h1 style={{ textAlign: 'center' }}>Phonebook</h1>\r\n            </CSSTransition>\r\n            <ContactForm />\r\n            <h2 style={{ textAlign: 'center' }}>Contacts</h2>\r\n            { (value.length > 0 || contacts.length > 1) && <Filter />}\r\n            { loader && (<div class='loader-wrapper'><LoaderSpinner class='loader-wrapper' /></div>)}\r\n            {/* { loader && <LoaderSpinner class='loader-wrapper' />} */}\r\n            <ContactList />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PhonebookPage;"],"sourceRoot":""}