{"version":3,"sources":["redux/actions.js","redux/auth/authConstants.js","redux/auth/authActions.js","routes/mainroutes.js","components/nav/NavItem.js","components/routes/PrivateRoute.js","components/routes/PublicRoute.js","components/nav/Nav.js","components/App.js","redux/reducers.js","redux/auth/authReducer.js","redux/store.js","index.js"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","getContactsRequest","getContactsSuccess","getContactsError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","SIGNUP","SIGNIN","SIGNOUT","SETLOADING","SETERROR","signUp","user","type","payload","signIn","signOut","setLoading","setError","error","mainRoutes","path","name","exact","component","lazy","isPrivate","restricted","NavItem","isAuth","className","Button","variant","color","size","style","to","activeClassName","toUpperCase","PrivateRoute","PublicRoute","Navigation","useSelector","state","auth","dispatch","useDispatch","map","route","key","onClick","fallback","App","Nav","items","createReducer","_","filter","id","loading","combineReducers","initialState","email","idToken","refreshToken","isLoading","localId","authReducer","authPersistConfig","storage","whitelist","store","configureStore","reducer","persistReducer","contacts","mainReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7e78071.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContactRequest = createAction('contact/addContactRequest');\r\nexport const addContactSuccess = createAction('contact/addContactSuccess');\r\nexport const addContactError = createAction('contact/addContactError');\r\n\r\nexport const getContactsRequest = createAction('contact/getContactsRequest',);\r\nexport const getContactsSuccess = createAction('contact/getContactsSuccess',);\r\nexport const getContactsError = createAction('contact/getContactsError');\r\n\r\nexport const deleteContactRequest = createAction('contact/deleteContactRequest',);\r\nexport const deleteContactSuccess = createAction('contact/deleteContactSuccess',);\r\nexport const deleteContactError = createAction('contact/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contact/changeFilter');","const SIGNUP = \"@auth/SignUp\";\r\nconst SIGNIN = \"@auth/SignIn\";\r\nconst SIGNOUT = \"@auth/SignOut\";\r\nconst SETLOADING = \"@auth/SetLoading\";\r\nconst SETERROR = \"@auth/SetError\";\r\n\r\nexport { SIGNUP, SIGNIN, SIGNOUT, SETLOADING, SETERROR };","import {\r\n    SIGNIN,\r\n    SIGNOUT,\r\n    SIGNUP,\r\n    SETLOADING,\r\n    SETERROR,\r\n} from \"./authConstants.js\";\r\n\r\nconst signUp = (user) => ({ type: SIGNUP, payload: user });\r\nconst signIn = (user) => ({ type: SIGNIN, payload: user });\r\nconst signOut = () => ({ type: SIGNOUT });\r\nconst setLoading = () => ({ type: SETLOADING });\r\nconst setError = (error) => ({ type: SETERROR, payload: error });\r\n\r\nexport { signUp, signIn, signOut, setLoading, setError };","import { lazy } from \"react\";\r\n\r\nexport const mainRoutes = [\r\n    {\r\n        path: \"/\",\r\n        name: \"Home\",\r\n        exact: true,\r\n        component: lazy(() => import(\"../pages/HomePage\")),\r\n        isPrivate: false,\r\n        restricted: false,\r\n    },\r\n    {\r\n        path: \"/phonebook\",\r\n        name: \"Phonebook\",\r\n        exact: false,\r\n        component: lazy(() => import(\"../pages/PhonebookPage\")),\r\n        isPrivate: true,\r\n        restricted: false,\r\n    },\r\n    {\r\n        path: \"/signup\",\r\n        name: \"SignUp\",\r\n        exact: false,\r\n        component: lazy(() => import(\"../components/auth/AuthForm\")),\r\n        isPrivate: false,\r\n        restricted: true,\r\n    },\r\n    {\r\n        path: \"/signin\",\r\n        name: \"SignIn\",\r\n        exact: false,\r\n        component: lazy(() => import(\"../components/auth/AuthForm\")),\r\n        isPrivate: false,\r\n        restricted: true,\r\n    },\r\n];","import { Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavItem = ({ isAuth, path, name, exact, isPrivate, restricted }) => {\r\n    return (\r\n        <>\r\n            {!isPrivate && !restricted && (\r\n                <li className='listItem' key={path}>\r\n                    <Button variant=\"contained\" color=\"primary\" size=\"large\" >\r\n                        <NavLink style={{ color: 'white' }}\r\n                            to={path}\r\n                            exact={exact}\r\n                            className='link'\r\n                            activeClassName='activeLink'>\r\n                            {name.toUpperCase()}\r\n                        </NavLink>\r\n                    </Button>\r\n                </li>\r\n            )}\r\n\r\n            {isAuth && isPrivate && !restricted && (\r\n                <li className='listItem' key={path}>\r\n                    <Button variant=\"contained\" color=\"primary\" size=\"large\" >\r\n                        <NavLink style={{ color: 'white' }}\r\n                            to={path}\r\n                            exact={exact}\r\n                            className='link'\r\n                            activeClassName='activeLink'>\r\n                            {name.toUpperCase()}\r\n                        </NavLink>\r\n                    </Button>\r\n                </li>\r\n            )}\r\n\r\n            {!isAuth && !isPrivate && restricted && (\r\n                <li className='listItem' key={path}>\r\n                    <Button variant=\"contained\" color=\"primary\" size=\"large\" >\r\n                        <NavLink style={{ color: 'white' }}\r\n                            to={path}\r\n                            exact={exact}\r\n                            className='link'\r\n                            activeClassName='activeLink'>\r\n                            {name.toUpperCase()}\r\n                        </NavLink>\r\n                    </Button>\r\n                </li>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default NavItem;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ path, exact, component, isAuth }) => {\r\n    return isAuth ? (<Route path={path} exact={exact} component={component} />)\r\n        : (<Redirect to='/signup' />)\r\n}\r\n\r\nexport default PrivateRoute;","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({ path, exact, component, restricted, isAuth }) => {\r\n    return isAuth && restricted ? (<Redirect to='/' />)\r\n        : (<Route path={path} exact={exact} component={component} />)\r\n}\r\n\r\nexport default PublicRoute;","import React, { Suspense } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport { mainRoutes } from \"../../routes/mainroutes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport NavItem from \"./NavItem\";\r\nimport { signOut } from \"../../redux/auth/authActions\";\r\nimport PrivateRoute from \"../routes/PrivateRoute\";\r\nimport PublicRoute from \"../routes/PublicRoute\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Navigation = () => {\r\n    const isAuth = useSelector(state => state.auth.isAuth)\r\n    const dispatch = useDispatch();\r\n    const onHandleLogout = () => {\r\n        dispatch(signOut());\r\n    };\r\n    return (\r\n        <>\r\n            <ul className='list right'>\r\n                {mainRoutes.map((route) => (\r\n                    <NavItem {...route} isAuth={isAuth} key={route.path}>\r\n                        {/* <NavLink\r\n                            to={route.path}\r\n                            exact={route.exact}\r\n                            className='link'\r\n                            activeClassName='activeLink'>\r\n                            {route.name.toUpperCase()}\r\n                        </NavLink> */}\r\n                    </NavItem>\r\n                ))}\r\n                {isAuth && (\r\n                    <Button variant=\"contained\" color=\"secondary\" onClick={onHandleLogout}>LogOut\r\n                        {/* <button onClick={onHandleLogout}>LogOut</button> */}\r\n                    </Button>)}\r\n            </ul>\r\n            {/* <button onClick={onHandleLogout}>LogOut</button> */}\r\n            {/* <Suspense fallback={<h2>...loading</h2>}> */}\r\n            <Suspense fallback={<></>}>\r\n                <Switch>\r\n                    {mainRoutes.map((route) =>\r\n                        route.isPrivate ? (<PrivateRoute {...route} isAuth={isAuth} key={route.path} />)\r\n                            : (<PublicRoute {...route} isAuth={isAuth} key={route.path} />)\r\n                    )}\r\n                </Switch>\r\n            </Suspense>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navigation;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// =====================================================================\r\n// import React, { Suspense } from \"react\";\r\n// import { Switch, Route, NavLink } from \"react-router-dom\";\r\n// import { mainRoutes } from \"../../routes/mainroutes\";\r\n// import { useDispatch } from \"react-redux\";\r\n// // import Button from '@material-ui/core/Button';\r\n// // import { signOut } from \"../../redux/actions/authActions\";\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import { AppBar, Box, Button, Container, Toolbar, Typography } from '@material-ui/core';\r\n// const useStyles = makeStyles(theme => ({\r\n//     root: {\r\n//         display: 'flex',\r\n//         '& > *': {\r\n//             margin: theme.spacing(1),\r\n//         },\r\n//     },\r\n// }));\r\n\r\n// const Navigation = () => {\r\n//     const classes = useStyles();\r\n//     const dispatch = useDispatch();\r\n//     // const onHandleLogout = () => {\r\n//     //     dispatch(signOut());\r\n//     // };\r\n//     return (\r\n//         <>\r\n//             <AppBar position='fixed' color=\"red\">\r\n//                 <Container fixed className={classes.root} >\r\n//                     <Typography variant='h4'>Unreal Phonebook</Typography>\r\n//                     <Toolbar className={classes.root} >\r\n//                         <ul className={classes.root} >\r\n//                             {mainRoutes.map(({ path, name, exact }) => (\r\n//                                 <li key={path} >\r\n//                                     <   Box className={classes.root} mr='90'>\r\n//                                         <Button color=\"primary\" variant=\"outlined\">\r\n//                                             <NavLink\r\n//                                                 to={path}\r\n//                                                 exact={exact}\r\n//                                                 className='link'\r\n//                                                 activeClassName='activeLink'>\r\n//                                                 {name.toUpperCase()}\r\n//                                             </NavLink>\r\n//                                         </Button>\r\n//                                     </Box>\r\n//                                 </li>\r\n//                             ))}\r\n//                         </ul>\r\n//                         {/* <button onClick={onHandleLogout}>Logout</button> */}\r\n//                         <Suspense fallback={<h2>...loading</h2>}>\r\n//                             <Switch>\r\n//                                 {mainRoutes.map(({ path, exact, component }) => (\r\n//                                     <Route path={path} exact={exact} component={component} key={path} />\r\n//                                 ))}\r\n//                             </Switch>\r\n//                         </Suspense>\r\n//                     </Toolbar>\r\n//                 </Container>\r\n//             </AppBar>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default Navigation;\r\n\r\n// =======================================================","import React from 'react';\r\n// import ContactForm from \"./contactForm/ContactForm\";\r\n// import ContactList from \"./contactList/ContactList\";\r\n// import Filter from \"./filter/Filter\";\r\n// import { CSSTransition } from 'react-transition-group';\r\n// import style from './App.module.css';\r\n// import { useSelector } from \"react-redux\";\r\n// import { allContacts, contactsFilter, isLoading } from '../redux/selectors';\r\n// import LoaderSpinner from './loader/LoaderSpinner'\r\nimport Navigation from './nav/Nav';\r\n// import { AppBar, Container, Toolbar, Typography } from '@material-ui/core';\r\n\r\nconst App = () => {\r\n    // const value = useSelector(contactsFilter);\r\n    // const contacts = useSelector(allContacts);\r\n    // const loader = useSelector(isLoading);\r\n\r\n    return (\r\n        <>\r\n            {/* <AppBar position='fixed'> */}\r\n            {/* <Container fixed> */}\r\n            {/* <Typography variant='h4'>Unreal Phonebook</Typography> */}\r\n            {/* <Toolbar> */}\r\n            {/* <Navigation /> */}\r\n            {/* </Toolbar> */}\r\n            {/* </Container> */}\r\n            {/* </AppBar> */}\r\n            <Navigation />\r\n            {/* <CSSTransition in={true} classNames={style} appear={true} timeout={1000} unmountOnExit>\r\n                <h1>Phonebook</h1>\r\n            </CSSTransition>\r\n            <ContactForm />\r\n            <h2>Contacts</h2>\r\n            {(value.length > 0 || contacts.length > 1) && <Filter />}\r\n            {loader && <LoaderSpinner />}\r\n            <ContactList /> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n    addContactRequest, addContactSuccess, addContactError,\r\n    getContactsRequest, getContactsSuccess, getContactsError,\r\n    deleteContactRequest, deleteContactSuccess, deleteContactError,\r\n    changeFilter\r\n} from './actions'\r\n\r\nconst items = createReducer([], {\r\n    [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n    [getContactsSuccess]: (_, { payload }) => payload,\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload)\r\n}\r\n);\r\n\r\nconst filter = createReducer('', {\r\n    [changeFilter]: (_, { payload }) => payload,\r\n})\r\n\r\nconst loading = createReducer(false, {\r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n    [getContactsRequest]: () => true,\r\n    [getContactsSuccess]: () => false,\r\n    [getContactsError]: () => false,\r\n    [deleteContactRequest]: () => true,\r\n    [deleteContactSuccess]: () => false,\r\n    [deleteContactError]: () => false,\r\n})\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n    loading,\r\n});","import {\r\n    SIGNIN,\r\n    SIGNOUT,\r\n    SIGNUP,\r\n    SETERROR,\r\n    SETLOADING,\r\n} from \"./authConstants.js\";\r\n\r\nconst initialState = {\r\n    email: \"\",\r\n    idToken: \"\",\r\n    refreshToken: \"\",\r\n    isAuth: false,\r\n    isLoading: false,\r\n    localId: \"\",\r\n    error: \"\",\r\n};\r\n\r\nconst authReducer = (state = { ...initialState }, { type, payload }) => {\r\n    switch (type) {\r\n        case SIGNUP:\r\n            return {\r\n                ...state,\r\n                email: payload.email,\r\n                idToken: payload.idToken,\r\n                refreshToken: payload.refreshToken,\r\n                isAuth: true,\r\n                localId: payload.localId,\r\n            };\r\n        case SIGNIN:\r\n            return {\r\n                ...state,\r\n                email: payload.email,\r\n                idToken: payload.idToken,\r\n                refreshToken: payload.refreshToken,\r\n                isAuth: true,\r\n                localId: payload.localId,\r\n            };\r\n        case SIGNOUT:\r\n            return { ...initialState };\r\n        case SETLOADING:\r\n            return { ...state, isLoading: !state.isLoading };\r\n        case SETERROR:\r\n            return { ...state, error: payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default authReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport mainReducer from \"./reducers\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport authReducer from './auth/authReducer';\r\n\r\nconst authPersistConfig = {\r\n    key: \"auth\",\r\n    storage,\r\n    whitelist: [\"email\", \"idToken\", \"refreshToken\", \"isAuth\"],\r\n};\r\nconst store = configureStore({\r\n    reducer: {\r\n        auth: persistReducer(authPersistConfig, authReducer),\r\n        contacts: (mainReducer),\r\n    },\r\n    middleware: getDefaultMiddleware =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n            },\r\n        })\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n\r\n\r\n\r\n// =============================================================\r\n// import { configureStore } from '@reduxjs/toolkit';\r\n// import mainReducer from \"./reducers\";\r\n\r\n// const store = configureStore({ reducer: { contacts: mainReducer } })\r\n\r\n// export default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { Provider } from \"react-redux\";\n// import store from './redux/store';\nimport { BrowserRouter } from 'react-router-dom'\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(<Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter><App /></BrowserRouter></PersistGate></Provider>, document.getElementById('root'));\n\n// ==========================================\n    // ReactDOM.render(<Provider store={store}><BrowserRouter><App /></BrowserRouter></Provider>, document.getElementById('root'));"],"sourceRoot":""}