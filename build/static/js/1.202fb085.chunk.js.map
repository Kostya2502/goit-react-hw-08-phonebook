{"version":3,"sources":["components/auth/AuthForm.js","redux/auth/authOperations.js"],"names":["initialState","email","password","AuthForm","location","useLocation","dispatch","useDispatch","useState","state","setState","onHandleChange","e","target","name","value","prev","onSubmit","user","preventDefault","pathname","a","setLoading","axios","post","process","returnSecureToken","response","signUp","data","setError","signIn","signInOperation","type","onChange"],"mappings":"gQAKMA,EAAe,CACjBC,MAAO,GACPC,SAAU,IAoCCC,UAjCE,WACb,IAAMC,EAAWC,cACXC,EAAWC,cAFE,EAIOC,mBAAS,eAAKR,IAJrB,mBAIZS,EAJY,KAILC,EAJK,KAMbC,EAAiB,SAACC,GAAO,IAAD,EACFA,EAAEC,OAAlBC,EADkB,EAClBA,KAAMC,EADY,EACZA,MACdL,GAAS,SAACM,GAAD,mBAAC,eAAeA,GAAhB,kBAAuBF,EAAOC,QAU3C,OACI,mCACI,uBAAOE,SATQ,SAACL,GClBJ,IAACM,EDmBjBN,EAAEO,iBACwB,YAAtBf,EAASgB,SACTd,GCrBaY,EDqBYT,ECrBb,uCAAU,WAAOH,GAAP,eAAAe,EAAA,6DAC9Bf,EAASgB,eADqB,kBAGHC,IAAMC,KAAKC,wGAAX,2BAChBP,GADgB,IAEnBQ,mBAAmB,KALG,OAGpBC,EAHoB,OAO1BrB,EAASsB,YAAOD,EAASE,OAPC,gDAS1BvB,EAASwB,YAAS,EAAD,KATS,yBAW1BxB,EAASgB,eAXiB,4EAAV,wDDsBThB,ECPS,SAACY,GAAD,8CAAU,WAAOZ,GAAP,eAAAe,EAAA,6DAC9Bf,EAASgB,eADqB,kBAGHC,IAAMC,KAAKC,oHAAX,2BAChBP,GADgB,IAEnBQ,mBAAmB,KALG,OAGpBC,EAHoB,OAO1BrB,EAASyB,YAAOJ,EAASE,OAPC,gDAS1BvB,EAASwB,YAAS,EAAD,KATS,yBAW1BxB,EAASgB,eAXiB,4EAAV,sDDOAU,CAAgBvB,KAK5B,UACI,2CACI,uBAAOwB,KAAK,OAAOlB,MAAON,EAAMR,MAAOa,KAAK,QAAQoB,SAAUvB,OAElE,8CACI,uBAAOsB,KAAK,OAAOlB,MAAON,EAAMP,SAAUY,KAAK,WAAWoB,SAAUvB,OAExE,wBAAQsB,KAAK,SAAb,SAA6C,YAAtB7B,EAASgB,SAAyB,SAAW","file":"static/js/1.202fb085.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { signInOperation, signUpOperation } from '../../redux/auth/authOperations';\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n}\r\n\r\nconst AuthForm = () => {\r\n    const location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const [state, setState] = useState({ ...initialState })\r\n\r\n    const onHandleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setState((prev) => ({ ...prev, [name]: value }))\r\n    }\r\n\r\n    const onHandleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (location.pathname === '/signup') {\r\n            dispatch(signUpOperation(state))\r\n        } else dispatch(signInOperation(state))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            < form onSubmit={onHandleSubmit}>\r\n                <label> Email\r\n                    <input type='text' value={state.email} name='email' onChange={onHandleChange}></input>\r\n                </label>\r\n                <label> Password\r\n                    <input type='text' value={state.password} name='password' onChange={onHandleChange}></input>\r\n                </label>\r\n                <button type='submit'>{location.pathname === '/signup' ? 'SignUp' : 'SignIn'}</button>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthForm;","import axios from \"axios\";\r\nimport { setError, setLoading, signIn, signUp } from \"./authActions\";\r\n\r\nconst signUpOperation = (user) => async (dispatch) => {\r\n    dispatch(setLoading());\r\n    try {\r\n        const response = await axios.post(process.env.REACT_APP_SIGNUP_URL, {\r\n            ...user,\r\n            returnSecureToken: true,\r\n        });\r\n        dispatch(signUp(response.data));\r\n    } catch (error) {\r\n        dispatch(setError(error));\r\n    } finally {\r\n        dispatch(setLoading());\r\n    }\r\n};\r\n\r\nconst signInOperation = (user) => async (dispatch) => {\r\n    dispatch(setLoading());\r\n    try {\r\n        const response = await axios.post(process.env.REACT_APP_SIGNIN_URL, {\r\n            ...user,\r\n            returnSecureToken: true,\r\n        });\r\n        dispatch(signIn(response.data));\r\n    } catch (error) {\r\n        dispatch(setError(error));\r\n    } finally {\r\n        dispatch(setLoading());\r\n    }\r\n};\r\n\r\nexport { signUpOperation, signInOperation };"],"sourceRoot":""}