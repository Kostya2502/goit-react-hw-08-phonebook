{"version":3,"sources":["components/App.module.css","redux/selectors.js","components/contactForm/ContactForm.js","redux/operations.js","components/contactList/ContactList.js","components/filter/Filter.js","components/loader/LoaderSpinner.js","pages/PhonebookPage.js","components/contactForm/ContactForm.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css"],"names":["module","exports","allContacts","state","contacts","items","contactsFilter","filter","isLoading","loading","filterContactsByName","createSelector","normalizedFilter","toLocaleLowerCase","name","includes","ContactForm","useForm","register","handleSubmit","errors","useState","setName","number","setNumber","dispatch","useDispatch","myNamesInItem","useSelector","reset","handleChange","e","preventDefault","currentTarget","value","onSubmit","contactName","contactNumber","map","contact","alert","getState","idToken","auth","addContactRequest","axios","post","process","then","data","addContactSuccess","id","catch","error","addContactError","className","style","form","label","type","placeholder","onChange","input","ref","required","warn","pattern","button","ContactList","useEffect","a","getContactsRequest","get","Object","keys","key","getContactsSuccess","getContactsError","ondeleteContact","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","deleteContact","TransitionGroup","component","CSSTransition","timeout","classNames","item","onClick","connect","OnFilterContacts","contactsActions","LoaderSpinner","color","height","width","margin","Component","PhonebookPage","loader","in","appear","unmountOnExit","length"],"mappings":"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","file":"static/js/6.72ad3f61.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"App_appear__1v9PW\",\"appearActive\":\"App_appearActive__1jGBG\"};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst allContacts = state => state.contacts.items;\r\n\r\nconst contactsFilter = state => state.contacts.filter;\r\n\r\nconst isLoading = state => state.contacts.loading;\r\n\r\nconst filterContactsByName = createSelector(\r\n    allContacts, contactsFilter,\r\n    (contacts, filter) => {\r\n        const normalizedFilter = filter.toLocaleLowerCase();\r\n\r\n        return contacts.filter(({ name }) =>\r\n            name.toLocaleLowerCase().includes(normalizedFilter),\r\n        );\r\n    },\r\n);\r\n\r\nexport { allContacts, contactsFilter, isLoading, filterContactsByName };","import style from \"./ContactForm.module.css\";\r\nimport { useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { allContacts } from \"../../redux/selectors\";\r\nimport { addContact } from \"../../redux/operations\";\r\n\r\nexport default function ContactForm() {\r\n    const { register, handleSubmit, errors } = useForm();\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n    const dispatch = useDispatch();\r\n    const myNamesInItem = useSelector(allContacts);\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    const onSubmit = () => {\r\n        const getContacts = myNamesInItem.map(contact =>\r\n            contact.name.toLocaleLowerCase(),\r\n        );\r\n\r\n        const isGetContactAlready = getContacts.includes(name.toLocaleLowerCase());\r\n\r\n        if (isGetContactAlready) {\r\n            reset();\r\n            return alert(`${name} is already in contacts!`);\r\n        }\r\n        dispatch(addContact(name, number));\r\n        reset();\r\n    };\r\n\r\n    const handleChange = e => {\r\n        e.preventDefault();\r\n        const { name, value } = e.currentTarget;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(onSubmit)} className={style.form}>\r\n            <label className={style.label}>\r\n                Name:\r\n          <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    placeholder=\"enter name\"\r\n                    onChange={handleChange}\r\n                    className={style.input}\r\n                    ref={register({ required: true })}\r\n                />\r\n            </label>\r\n\r\n            {errors.name && errors.name.type === 'required' && (\r\n                <p className={style.warn}>This is required </p>\r\n            )}\r\n\r\n            <label className={style.label}>\r\n                Number:\r\n          <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    placeholder=\"enter number\"\r\n                    ref={register({\r\n                        required: true,\r\n                        pattern: /^[0-9]+$/gm,\r\n                    })}\r\n                    onChange={handleChange}\r\n                    className={style.input}\r\n                />\r\n            </label>\r\n\r\n            {errors.number && errors.number.type === 'required' && (\r\n                <p className={style.warn}>This is required </p>\r\n            )}\r\n\r\n            {errors.number && errors.number.type === 'pattern' && (\r\n                <p className={style.warn}>There must be numbers</p>\r\n            )}\r\n\r\n            <button type=\"submit\" className={style.button}>\r\n                Add contact\r\n        </button>\r\n        </form>\r\n    );\r\n}\r\n","import axios from 'axios';\r\nimport {\r\n    addContactRequest, addContactSuccess, addContactError,\r\n    getContactsRequest, getContactsSuccess, getContactsError,\r\n    deleteContactRequest, deleteContactSuccess, deleteContactError\r\n} from './actions'\r\n\r\n\r\nexport const addContact = (contactName, contactNumber) => (dispatch, getState) => {\r\n    const idToken = getState().auth.idToken;\r\n    const contact = {\r\n        name: contactName,\r\n        number: contactNumber,\r\n    };\r\n    dispatch(addContactRequest());\r\n    axios.post(`${process.env.REACT_APP_BASE_URL}/contacts.json?auth=${idToken}`, contact)\r\n        .then(({ data }) => dispatch(addContactSuccess({ ...contact, id: data.name })))\r\n        .catch((error) => dispatch(addContactError(error)))\r\n}\r\n\r\nexport const deleteContact = id => async (dispatch, getState) => {\r\n    // const idToken = getState().auth.idToken;\r\n    dispatch(deleteContactRequest());\r\n    try {\r\n        await axios.delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`);\r\n        dispatch(deleteContactSuccess(id));\r\n    } catch (error) {\r\n        dispatch(deleteContactError(error));\r\n    }\r\n};\r\n\r\nexport const getContacts = () => async (dispatch, getState) => {\r\n    // const idToken = getState().auth.idToken;\r\n    dispatch(getContactsRequest());\r\n    try {\r\n        const { data } = await axios.get(`${process.env.REACT_APP_BASE_URL}/contacts.json`);\r\n        const contacts = Object.keys(data).map((key) => ({\r\n            ...data[key],\r\n            id: key,\r\n        }));\r\n        dispatch(getContactsSuccess(contacts));\r\n    } catch (error) {\r\n        dispatch(getContactsError(error));\r\n    }\r\n};\r\n\r\n// ============================================================\r\n\r\n// import axios from 'axios';\r\n// import {\r\n//     addContactRequest, addContactSuccess, addContactError,\r\n//     getContactsRequest, getContactsSuccess, getContactsError,\r\n//     deleteContactRequest, deleteContactSuccess, deleteContactError\r\n// } from './actions'\r\n\r\n\r\n// export const addContact = (contactName, contactNumber) => dispatch => {\r\n//     const contact = {\r\n//         name: contactName,\r\n//         number: contactNumber,\r\n//     };\r\n//     dispatch(addContactRequest());\r\n//     axios.post(`${process.env.REACT_APP_BASE_URL}/contacts.json`, contact)\r\n//         .then(({ data }) => dispatch(addContactSuccess({ ...contact, id: data.name })))\r\n//         .catch((error) => dispatch(addContactError(error)))\r\n// }\r\n\r\n// // export const deleteContact = Id => dispatch => {\r\n// //     dispatch(deleteContactRequest());\r\n// //     axios.delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`)\r\n// //         .then(() => dispatch(deleteContactSuccess(Id)))\r\n// //         .catch(error => dispatch(deleteContactError(error)));\r\n// // };\r\n\r\n// export const deleteContact = id => async dispatch => {\r\n//     dispatch(deleteContactRequest());\r\n//     try {\r\n//         await axios.delete(`${process.env.REACT_APP_BASE_URL}/contacts/${id}.json`);\r\n//         dispatch(deleteContactSuccess(id));\r\n//     } catch (error) {\r\n//         dispatch(deleteContactError(error));\r\n//     }\r\n// };\r\n\r\n// export const getContacts = () => async dispatch => {\r\n//     dispatch(getContactsRequest());\r\n//     try {\r\n//         const { data } = await axios.get(`${process.env.REACT_APP_BASE_URL}/contacts.json`);\r\n//         const contacts = Object.keys(data).map((key) => ({\r\n//             ...data[key],\r\n//             id: key,\r\n//         }));\r\n//         dispatch(getContactsSuccess(contacts));\r\n//     } catch (error) {\r\n//         dispatch(getContactsError(error));\r\n//     }\r\n// };\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport style from './ContactList.module.css';\r\nimport './ContactList.css';\r\nimport { deleteContact, getContacts } from '../../redux/operations';\r\nimport { filterContactsByName } from '../../redux/selectors';\r\n\r\nconst ContactList = () => {\r\n    const dispatch = useDispatch();\r\n    const contacts = useSelector(filterContactsByName);\r\n\r\n    useEffect(() => {\r\n        dispatch(getContacts());\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const ondeleteContact = id => dispatch(deleteContact(id));\r\n\r\n    return (\r\n        <TransitionGroup component='ul' >\r\n            {contacts.map(({ id, name, number }) => (\r\n                < CSSTransition key={id} timeout={400} classNames={style} >\r\n                    <li key={id} className={style.item}>\r\n                        <p >\r\n                            {name}: {number}\r\n                        </p>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => ondeleteContact(id)}\r\n                            className={style.button}\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </li>\r\n                </CSSTransition>\r\n            ))\r\n            }\r\n        </TransitionGroup >\r\n    );\r\n}\r\n\r\nexport default ContactList;\r\n","import style from './Filter.module.css';\r\nimport { connect } from \"react-redux\";\r\nimport * as contactsActions from '../../redux/actions';\r\nimport { contactsFilter } from '../../redux/selectors';\r\n\r\nconst Filter = ({ value, OnFilterContacts }) => {\r\n    return (\r\n        <div classNames={style}><label>\r\n            Find contacts by name:\r\n            <input\r\n                type=\"text\"\r\n                value={value}\r\n                onChange={OnFilterContacts}\r\n                placeholder='Search contact'\r\n            />\r\n        </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    value: contactsFilter(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    OnFilterContacts: e =>\r\n        dispatch(contactsActions.changeFilter(e.currentTarget.value)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default class LoaderSpinner extends Component {\r\n    render() {\r\n        return (\r\n            <Loader\r\n                type=\"TailSpin\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n                timeout={3000}\r\n                style={{ margin: \"auto\" }}\r\n            />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport ContactForm from '../components/contactForm/ContactForm';\r\nimport ContactList from '../components/contactList/ContactList';\r\nimport Filter from '../components/filter/Filter';\r\nimport LoaderSpinner from '../components/loader/LoaderSpinner';\r\nimport { allContacts, contactsFilter, isLoading } from '../redux/selectors';\r\nimport style from '../components/App.module.css';\r\n\r\nconst PhonebookPage = () => {\r\n    const value = useSelector(contactsFilter);\r\n    const contacts = useSelector(allContacts);\r\n    const loader = useSelector(isLoading);\r\n\r\n    return (\r\n        <>\r\n            <CSSTransition in={true} classNames={style} appear={true} timeout={1000} unmountOnExit>\r\n                <h1>Phonebook</h1>\r\n            </CSSTransition>\r\n            <ContactForm />\r\n            <h2>Contacts</h2>\r\n            { (value.length > 0 || contacts.length > 1) && <Filter />}\r\n            { loader && <LoaderSpinner />}\r\n            <ContactList />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PhonebookPage;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Kinz\",\"label\":\"ContactForm_label__2Fdr7\",\"input\":\"ContactForm_input__1Ahv4\",\"button\":\"ContactForm_button__sioAz\",\"warn\":\"ContactForm_warn__1YVhA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2R1V7\",\"button\":\"ContactList_button__20C9Q\",\"enter\":\"ContactList_enter__vJt0x\",\"enterActive\":\"ContactList_enterActive__3Hn21\",\"exit\":\"ContactList_exit__1S6zz\",\"exitActive\":\"ContactList_exitActive__2wNcC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Filter_enter__22M92\",\"enterActive\":\"Filter_enterActive__3-LQS\",\"exit\":\"Filter_exit__1dVP_\",\"exitActive\":\"Filter_exitActive__LEmnx\"};"],"sourceRoot":""}